import nltk
import re
from nltk.collocations import *
from nltk.metrics.spearman import *

bigram_measures = nltk.collocations.BigramAssocMeasures()

def reform():
    # Переводим в нужный нам формат
    reg = re.compile(' *, *')
    f_1 = open('court-V-N.csv', 'r', encoding='utf-8')
    return [reg.split(line.strip().lower()) for line in f_1]

def metrics():
    # Подсчитываем метрики и формируем списки коллокаций
    finder = BigramCollocationFinder.from_documents(reform())
    finder.apply_freq_filter(10)
    pmi_met = sorted(finder.nbest(bigram_measures.pmi, 10))
    log_met = sorted(finder.nbest(bigram_measures.likelihood_ratio, 10))
    raw_met = sorted(finder.nbest(bigram_measures.raw_freq, 10))
    stt_met = sorted(finder.nbest(bigram_measures.student_t, 10))
    chi_met = sorted(finder.nbest(bigram_measures.chi_sq, 10))
    return [' '.join(el) for el in pmi_met] , [' '.join(el) for el in log_met], \
           [' '.join(el) for el in raw_met], [' '.join(el) for el in stt_met], [' '.join(el) for el in chi_met]

def compare():
    # Сравниваем списки коллокаций с золотым стандартом
    f_2 = open('Золотой стандарт.txt', 'r', encoding='utf-8')
    g_s = [line.strip() for line in f_2]
    for met in metrics():
        new_met = [el for el in met if el in g_s]
        new_gs = [el for el in g_s if el in met]
        print ('%0.1f' % spearman_correlation(ranks_from_sequence(new_gs), ranks_from_sequence(new_met)), new_met)
        print ('%0.1f' % spearman_correlation(ranks_from_sequence(g_s), ranks_from_sequence(met)), met)

compare()

'''
1 метод: метрика pmi
0.5 ['выдать санкция', 'вынести решение', 'наложить арест', 'принять решение', 'суд рассмотреть', 'удовлетворить ходатайство']
-0.4 ['выдать санкция', 'вынести решение', 'наложить арест', 'признать виновная', 'принять решение', 'санкция арест', 'суд дать', 'суд рассмотреть', 'удовлетворить иск', 'удовлетворить ходатайство']

2 метод: метрика log likelihood
0.6 ['выдать санкция', 'наложить арест', 'принять решение', 'суд признать', 'удовлетворить ходатайство']
-1.3 ['выдать санкция', 'наложить арест', 'принять решение', 'санкция арест', 'суд вынести', 'суд признать', 'суд принять', 'суд удовлетворить', 'удовлетворить иск', 'удовлетворить ходатайство']

3 метод: метрика raw frequency
1.0 ['принять решение', 'суд признать', 'суд рассмотреть']
-2.2 ['принять решение', 'суд вынести', 'суд отказать', 'суд отклонить', 'суд приговорить', 'суд признать', 'суд принять', 'суд рассмотреть', 'суд удовлетворить', 'удовлетворить иск']

4 метод: метрика student test
0.4 ['принять решение', 'суд признать', 'суд рассмотреть', 'удовлетворить ходатайство']
-4.0 ['принять решение', 'суд вынести', 'суд отказать', 'суд приговорить', 'суд признать', 'суд принять', 'суд рассмотреть', 'суд удовлетворить', 'удовлетворить иск', 'удовлетворить ходатайство']

5 метод: метрика chi square
0.5 ['выдать санкция', 'вынести решение', 'наложить арест', 'принять решение', 'суд признать', 'удовлетворить ходатайство']
-0.4 ['выдать санкция', 'вынести решение', 'наложить арест', 'признать виновная', 'принять решение', 'санкция арест', 'суд признать', 'суд удовлетворить', 'удовлетворить иск', 'удовлетворить ходатайство']

Если смотреть на первые строки в результате по каждому методу (это валидная spearman correlation по пересекающимся спискам),
то лучше всего себя показал третий метод, а также приемлемые результаты у второго метода.
Но если посмотреть на непересекающиеся списки (вторая строка), то видно, что spearman выходит за границы единицы по модулю.
Это показывает, что десь корреляция не имеет смысла и списки не идентичны,
как, например, корреляция показывает для третьего метода.
Поэтому я бы не считала, что лучше всего справились второй и третий методы, а сказала бы, что
лучше всего справились первый и пятый метод.
На мой взгляд, бОльшую информативность в данном случае несет наполнение списков, а не их ранг,
поскольку зс собирался руками и не сильно опирается на частоты (в моем случае больше не интуицию).
Меня предлагаемые списки коллокаций по первому и пятому методу полностью устраивают,
хоть они и не совпадают полностью с зс.
'''